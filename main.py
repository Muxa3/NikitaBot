import telebot
from telebot import types
from urllib.request import urlopen
import sympy
import datetime
import threading


token=#–í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π –¢–æ–∫–µ–Ω

#–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot=telebot.TeleBot(token)


#–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã /help –∏ /start
@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton(text = "–ú–µ–º—ã", callback_data='meme')
    button2 = types.InlineKeyboardButton(text = "–í—ã—á–∏—Å–ª–µ–Ω–∏—è", callback_data='calc')
    button3 = types.InlineKeyboardButton(text = "–ó–∞–º–µ—Ç–∫–∏", callback_data='note')
    markup.add(button1, button2, button3)
    bot.send_message(chat_id=message.chat.id,text="–ü—Ä–∏–≤–µ—Ç, {0.first_name} ‚úåÔ∏è\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ù–∏–∫–∏—Ç–∞ –∏ —è —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Ä–æ–±–æ-–±–æ—Ç–∏–∫‚ù§Ô∏è".format(message.from_user), reply_markup=markup)


#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–µ–º—ã' - –∫–∏–¥–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –º–µ–º —Å https://img.randme.me/
@bot.callback_query_handler(func=lambda call: call.data =="meme")
def meme_pressed(call: types.CallbackQuery):
    bot.reply_to(message=call.message, text="–©–∞ –∫–∏–Ω—É)")
    bot.send_photo(call.message.chat.id, urlopen('https://img.randme.me/'))


#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–í—ã—á–∏—Å–ª–µ–Ω–∏—è' - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–º–µ—Ä –¥–ª—è —Ä–µ—à–µ–Ω–∏—è
@bot.callback_query_handler(func=lambda call: call.data =="calc")
def calc_pressed(call: types.CallbackQuery):
    bot.reply_to(message=call.message, text="–ê –Ω—É –∫–∞, –¥–∞–π –º–Ω–µ –ø—Ä–∏–º–µ—Ä—á–∏–∫")
    #–±–µ—Ä–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∏–¥–∞–µ—Ç –µ–≥–æ –Ω–∞ –º–µ—Ç–æ–¥ process_calc
    bot.register_next_step_handler(call.message, process_calc)

#–ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
def process_calc(message):
    try:
        result = int(sympy.simplify(message.text))
        bot.send_message(message.chat.id, text=result)
    #–µ—Å–ª–∏ –≤—ã—Å–∫–∞–∫–∏–≤–∞–µ—Ç –æ—à–∏–±–∫–∞ - –∫–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    except:
        bot.reply_to(message, text = '–ë–ª–∏–Ω, —è —Ç–∞–∫–æ–µ –Ω–µ –≤—ã—á–∏—Å–ª—é... –ò—Å–ø—Ä–∞–≤–ª—è–π')


#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ó–∞–º–µ—Ç–∫–∏' - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∑–∞–º–µ—Ç–∫–∏
@bot.callback_query_handler(func=lambda call: call.data =="note")
def note_pressed(call: types.CallbackQuery):
    bot.reply_to(message=call.message, text="–õ–∞–¥—ã)")
    bot.send_message(call.message.chat.id, "–ê –æ —á—ë–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å?")
    #–±–µ—Ä–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∏–¥–∞–µ—Ç –µ–≥–æ –Ω–∞ –º–µ—Ç–æ–¥ set_note_name
    bot.register_next_step_handler(call.message, set_note_name)

#–ú–µ—Ç–æ–¥, –∑–∞–ø–æ–ª–Ω—è–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –∏ –≤—ã–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–ª—è –Ω–µ—ë –¥–∞—Ç—É
def set_note_name(message):
    user_data = {}
    user_data[message.chat.id] = {'note_name': message.text}
    bot.send_message(message.chat.id, '–ê–≥–∞, –ø–æ–Ω—è–ª... –ê —Ç–µ–±–µ –∫–æ–≥–¥–∞ –Ω–∞–ø–æ–º–Ω–∏—Ç—å? –ù—É, –∑–Ω–∞–µ—à—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î —á—á:–º–º:—Å—Å.')
    #–±–µ—Ä–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∏–¥–∞–µ—Ç –µ–≥–æ –Ω–∞ –º–µ—Ç–æ–¥ set_note_date
    bot.register_next_step_handler(message, set_note_date, user_data)

#–ú–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –¥–∞—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç–∞–π–º–µ—Ä
def set_note_date(message, user_data):
    try:
        note_date = datetime.datetime.strptime(message.text, '%Y-%m-%d %H:%M:%S')
        now = datetime.datetime.now()
        delta = note_date - now
        #–µ—Å–ª–∏ –¥–∞—Ç–∞ —É–∂–µ –ø—Ä–æ—à–ª–∞ - –∫–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
        if delta.total_seconds() <= 0:
            bot.send_message(message.chat.id, '–¢–∞–∫ –ø—Ä–æ—à–ª–æ –∂–µ –≤—Ä–µ–º—è —É–∂–µ...')
            bot.send_message(message.chat.id, '–ö—Ä—á, –¥–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π')
        else:
            note_name = user_data[message.chat.id]['note_name']
            bot.send_message(message.chat.id, '–û–∫–µ–π, —Ç–∞–∫ –∏ –∑–∞–ø–∏—à–µ–º... "{}" –Ω–∞ {}.'.format(note_name, note_date))
            bot.send_message(message.chat.id, '–ü–æ—Ç–æ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–æ–º–Ω—é)')
            #–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
            note_date = threading.Timer(delta.total_seconds(), notify, [message.chat.id, note_name])
            note_date.start()
    #–µ—Å–ª–∏ –≤—ã—Å–∫–∞–∫–∏–≤–∞–µ—Ç –æ—à–∏–±–∫–∞ - –∫–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    except:
        bot.send_message(message.chat.id, '–Ø –Ω–µ –ø–æ–Ω—è–ª –∫–æ–≥–¥–∞...')
        bot.send_message(message.chat.id, '–ö—Ä—á, –¥–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π')

#–ú–µ—Ç–æ–¥, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ–±—Ä–∞—â–∞–µ—Ç—Å—è —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
def notify(chat_id, note_name):
    bot.send_message(chat_id, '–≠–π, –ø–æ—Ä–∞ "{}"!'.format(note_name))


#–≠—Ö–æ-–±–æ—Ç
@bot.message_handler(func=lambda message: True)
def message_reply(message):
    text = message.text.lower()
    text = ' '.join(text.split())
    if text=='—è —Å–∫—É—á–∞—é':
        bot.send_message(message.chat.id,"–Ø —Ç–æ–∂–µ —Å–æ—Å–∫—É—á–∏–ª—Å—è, —Å–ª–∞–¥–∫–∏–π üíã")
        bot.send_photo(message.chat.id, 'https://imgur.com/a/SbaXpJY')
    elif text=='–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id,"–¢–µ–±–µ —Ç–æ–∂–µ –ø—Ä–∏–≤–µ—Ç, –ø—É–ø—Å–∏–∫)")
    else:
        bot.send_message(message.chat.id,"–ê–≥–∞-–∞–≥–∞")

bot.infinity_polling()